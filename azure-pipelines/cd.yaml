name: $(BuildID)

trigger:
  branches:
    include:
    # - main
    # - production
    - fix/azure-pipelines
  paths:
    exclude:
    - '.github/*'
    - 'backends/*'
    - 'modules/cicd-setup'
    - 'images/*'
    - '*.md'

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  tf-state-container: terraform
  tf-plan-file:       deployment.tfplan

stages:
- template: stages/ci.yaml

- stage: deploy_dev
  displayName: Deploy - Dev
  condition: and(succeeded('CI'), eq(variables['Build.SourceBranch'], 'refs/heads/fix/azure-pipelines'))
  variables:
  - group: e2e-gov-demo-kv # Todo - move to global scope?
  - name:  tf-state-file
    value: dev-v2.tfstate
  - name:  tf-var-file
    value: environments/dev.tfvars

  jobs:
  - job: planDev
    displayName: Terraform Plan
    variables:
    - group: e2e-gov-demo-subscription-reader
    steps:
    - template: steps/terraform-init.yaml
    - template: steps/terraform-plan.yaml

  - job: applyDev
    displayName: Terraform Plan
    dependsOn: planDev
    variables:
    - group: e2e-gov-demo-headless-owner
    steps:
    - template: steps/terraform-init.yaml
    - template: steps/terraform-plan.yaml
    - template: steps/terraform-apply.yaml

