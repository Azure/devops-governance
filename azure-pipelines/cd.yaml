name: $(BuildID)

trigger:
  branches:
    include:
    # - main
    # - production
    - fix/azure-pipelines
  paths:
    exclude:
    - '.github/*'
    - 'backends/*'
    - 'modules/cicd-setup'
    - 'images/*'
    - '*.md'

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- template: _vars.yaml
- group: e2e-gov-demo-kv

stages:
- template: stages/ci.yaml

- stage: deploy_dev
  displayName: Deploy - Dev
  condition: and(succeeded('CI'), eq(variables['Build.SourceBranch'], 'refs/heads/fix/azure-pipelines'))
  variables:
    terraformStateFile: dev-v2.tfstate
    terraformStateContainer: terraform
    terraformVarFile: environments/dev.tfvars
    devopsOrgUrl: "https://dev.azure.com/ado-gov-demo-dev"
  jobs:
    variables:
    - group: e2e-gov-demo-headless-owner
    steps:
    - template: steps/terraform-init.yaml
    - template: steps/terraform-plan.yaml
    - template: steps/terraform-apply.yaml

