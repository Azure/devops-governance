name: $(BuildID)

pool:
  vmImage: 'ubuntu-latest'

trigger: none # PR only

pr:
- main
- production

variables:
  - template: ./_vars.yaml
  - group: e2e-gov-demo-subscription-reader
  - group: mask-ids

stages:
- template: ./stages/ci.yaml

- stage: driftStage
  displayName: Detect Drift
  variables:
    githubRepoName:       Azure/devops-governance
    githubConnectionName: e2e-governance-demo
  jobs:
  - job: driftJob
    displayName: Terraform Plan
    steps:
    - template: ./steps/terraform-init.yaml
    - bash: |
        # Remember Exit Code
        set -uo pipefail

        # Run `terraform plan` and save output (used later for posting to GitHub)
        if terraform plan -detailed-exitcode \
          -var superadmins_aad_object_id=$(kv-aad-superadmins-group-id) \
          -var 'application_owners_ids=$(kv-aad-app-owners-ids)' \
          -var-file=$(terraformVarFile) \
            | tee plan-output.txt \
            exit ${PIPESTATUS[0]}
        then
          echo "üü¢ No configuration drift detected"
          echo "##vso[task.setvariable variable=exitCode;isOutput=true]zero"
        else
          tf_exit_code=$?
          echo "‚ö†Ô∏è Configuration drift detected"
          echo "##vso[task.setvariable variable=exitCode;isOutput=true]non-zero"
          exit $tf_exit_code
        fi
      displayName: Terraform - Detect configuration drift
      name: planStep
      env:
        ARM_SUBSCRIPTION_ID:        $(kv-arm-subscription-id)
        ARM_CLIENT_ID:              $(kv-arm-client-id)
        ARM_CLIENT_SECRET:          $(kv-arm-client-secret)
        ARM_TENANT_ID:              $(kv-arm-tenant-id)
        AZDO_ORG_SERVICE_URL:       $(devopsOrgUrl)
        AZDO_PERSONAL_ACCESS_TOKEN: $(kv-ado-pat)

    # Save plan output
    - publish: ./plan-output.txt
      artifact: terraformPlanOutput
      displayName: Save 'terraform plan' output
      condition: succeededOrFailed()


# ---------------------------
# Post Status to Pull Request
# ---------------------------

- stage: pullRequestCommentStage
  displayName: Add Results to Pull Request
  condition: and(succeededOrFailed(), eq(variables.isPR, 'True'))
  variables:
    exitCode: $[ stageDependencies.driftStage.driftJob.outputs['planStep.exitCode'] ]
  jobs:
  - job: postCommentJob
    displayName: Post to GitHub
    steps:

    # Add Comment - No Drift
    # ----------------------
    - task: GitHubComment@0
      condition: eq(variables.exitCode, 'zero')
      displayName: Post - No Drift
      inputs:
        gitHubConnection: $(githubConnectionName)
        repositoryName: $(githubRepoName)
        comment: |
          ### üü¢ &nbsp;No configuration drift detected

          Source Version: $(Build.SourceVersion)

    # Add Comment - Drift detected
    # ----------------------------
    - task: GitHubComment@0
      condition: eq(variables.exitCode, 'non-zero')
      displayName: Post - Has Drift
      inputs:
        gitHubConnection: $(githubConnectionName)
        repositoryName: $(githubRepoName)
        comment: |
          ### ‚ö†Ô∏è &nbsp;Configuration Drift Detected (_OR_ State File Locked)

          Source Version: $(Build.SourceVersion)

          Approving this Pull Request may result in destructive changes to your Azure resources. Please review the `terraform plan` output diff at Azure Pipelines Build Result Page.

          Proceed with caution!
